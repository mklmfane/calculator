const fetch = require('node-fetch');

const GITHUB_TOKEN = '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'; // Replace with your GitHub token
const OWNER = 'danteachqe';     // Replace with your GitHub username or organization name
const REPO = 'calculator';            // Replace with your repository name

const headers = {
    'Authorization': `token ${GITHUB_TOKEN}`,
    'Accept': 'application/vnd.github.v3+json'
};

async function fetchAllWorkflowRuns(page = 1, runs = []) {
    const response = await fetch(`https://api.github.com/repos/${OWNER}/${REPO}/actions/runs?page=${page}`, { headers });
    if (!response.ok) throw new Error('Failed to fetch workflow runs');

    const data = await response.json();
    runs.push(...data.workflow_runs);

    if (data.workflow_runs.length === 30) { // Assuming default pagination is 30 items per page
        return fetchAllWorkflowRuns(page + 1, runs);
    }

    return runs;
}

async function deleteWorkflowRuns() {
    try {
        const workflowRuns = await fetchAllWorkflowRuns();

        for (const run of workflowRuns) {
            const deleteResponse = await fetch(`https://api.github.com/repos/${OWNER}/${REPO}/actions/runs/${run.id}`, {
                method: 'DELETE',
                headers
            });

            if (deleteResponse.ok) {
                console.log(`Successfully deleted workflow run ${run.id}`);
            } else {
                console.log(`Failed to delete workflow run ${run.id}`);
            }
        }
    } catch (error) {
        console.error(`Error: ${error.message}`);
    }
}

deleteWorkflowRuns();
