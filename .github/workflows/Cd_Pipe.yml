name: CD Workflow

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn clean install -DskipTests -Djacoco.skip=true -Ddependency-check.skip=true

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: java-app
          path: target/*.jar

  deploy_backend:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: java-app

      - name: Display downloaded files
        run: ls -R

  deploy_front_end:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - name: Run Unit Tests
        run: echo "Running unit tests..."

  lighthouse_check:
    runs-on: ubuntu-latest
    needs: deploy_front_end
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v2
        with:
          node-version: 16
      - run: sudo apt-get install -y jq
      - run: npm install -g lighthouse
      - name: Run Lighthouse and check performance
        run: |
          LIGHTHOUSE_SCORE=$(lighthouse --output=json --quiet --chrome-flags="--headless --no-sandbox" "https://www.blazedemo.com" | jq '.categories.performance.score * 100')
          echo "Performance score: $LIGHTHOUSE_SCORE"
          if [ $LIGHTHOUSE_SCORE -lt 60 ]; then
            echo "error: Performance score is below 60. Blocking PR."
            exit 1
          fi

  deploy_Backend_performance:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v4
      - run: echo "Running unit tests..."

  Setup_device_farm:
    runs-on: ubuntu-latest
    needs: deploy_backend
    steps:
      - uses: actions/checkout@v4
      - run: echo "Initilize Browserstack."

  Run_mobile_device_Tests:
    runs-on: ubuntu-latest
    needs: Setup_device_farm
    steps:
      - uses: actions/checkout@v4
      - run: echo "Initilize Browserstack."

  k6_load_test:
    runs-on: ubuntu-latest
    needs: deploy_Backend_performance
    steps:
      - uses: actions/checkout@v4
      - uses: grafana/k6-action@v0.2.0
        with:
          filename: src/test/K6/perftest.js
          flags: --out json=results.json
      - uses: actions/upload-artifact@v4
        with:
          name: k6-report
          path: results.json

  jmeter_test:
    runs-on: ubuntu-latest
    needs: k6_load_test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'adopt'
      - run: |
          wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.4.1.tgz
          tar -xzf apache-jmeter-5.4.1.tgz
          apache-jmeter-5.4.1/bin/jmeter -n -t src/test/Jmeter/Test.jmx -l test_results.jtl
      - uses: actions/upload-artifact@v4
        with:
          name: jmeter-results
          path: test_results.jtl

  run_RestA_Tests:
    runs-on: ubuntu-latest
    needs: deploy_backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - run: mvn test -Dtest=CalculatorTests
      - run: mvn surefire-report:report
      - uses: actions/upload-artifact@v4
        with:
          name: surefire-reports
          path: target/site/surefire-report.html

  postman_tests:
    runs-on: ubuntu-latest
    needs: deploy_backend
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v2
        with:
          node-version: 20
      - run: npm install -g newman newman-reporter-html
      #- run: newman run src/test/Postman_Tests/Calculate.postman_collection.json -r html --reporter-html-export report.html
      - uses: actions/upload-artifact@v4
        with:
          name: postman-report
          path: report.html

  run-selenium-tests:
    runs-on: windows-latest
    needs: [deploy_backend, deploy_front_end, lighthouse_check]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'
      - uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - run: choco install firefox
      - run: mvn test -Dtest=SeleniumTest